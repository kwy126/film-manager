package com.circle.vo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TeRoleModuleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public TeRoleModuleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRolelabelIsNull() {
            addCriterion("roleLabel is null");
            return (Criteria) this;
        }

        public Criteria andRolelabelIsNotNull() {
            addCriterion("roleLabel is not null");
            return (Criteria) this;
        }

        public Criteria andRolelabelEqualTo(String value) {
            addCriterion("roleLabel =", value, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelNotEqualTo(String value) {
            addCriterion("roleLabel <>", value, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelGreaterThan(String value) {
            addCriterion("roleLabel >", value, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelGreaterThanOrEqualTo(String value) {
            addCriterion("roleLabel >=", value, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelLessThan(String value) {
            addCriterion("roleLabel <", value, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelLessThanOrEqualTo(String value) {
            addCriterion("roleLabel <=", value, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelLike(String value) {
            addCriterion("roleLabel like", value, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelNotLike(String value) {
            addCriterion("roleLabel not like", value, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelIn(List<String> values) {
            addCriterion("roleLabel in", values, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelNotIn(List<String> values) {
            addCriterion("roleLabel not in", values, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelBetween(String value1, String value2) {
            addCriterion("roleLabel between", value1, value2, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andRolelabelNotBetween(String value1, String value2) {
            addCriterion("roleLabel not between", value1, value2, "rolelabel");
            return (Criteria) this;
        }

        public Criteria andModulecodeIsNull() {
            addCriterion("moduleCode is null");
            return (Criteria) this;
        }

        public Criteria andModulecodeIsNotNull() {
            addCriterion("moduleCode is not null");
            return (Criteria) this;
        }

        public Criteria andModulecodeEqualTo(String value) {
            addCriterion("moduleCode =", value, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeNotEqualTo(String value) {
            addCriterion("moduleCode <>", value, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeGreaterThan(String value) {
            addCriterion("moduleCode >", value, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeGreaterThanOrEqualTo(String value) {
            addCriterion("moduleCode >=", value, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeLessThan(String value) {
            addCriterion("moduleCode <", value, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeLessThanOrEqualTo(String value) {
            addCriterion("moduleCode <=", value, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeLike(String value) {
            addCriterion("moduleCode like", value, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeNotLike(String value) {
            addCriterion("moduleCode not like", value, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeIn(List<String> values) {
            addCriterion("moduleCode in", values, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeNotIn(List<String> values) {
            addCriterion("moduleCode not in", values, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeBetween(String value1, String value2) {
            addCriterion("moduleCode between", value1, value2, "modulecode");
            return (Criteria) this;
        }

        public Criteria andModulecodeNotBetween(String value1, String value2) {
            addCriterion("moduleCode not between", value1, value2, "modulecode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeIsNull() {
            addCriterion("mosuleSuperCode is null");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeIsNotNull() {
            addCriterion("mosuleSuperCode is not null");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeEqualTo(String value) {
            addCriterion("mosuleSuperCode =", value, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeNotEqualTo(String value) {
            addCriterion("mosuleSuperCode <>", value, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeGreaterThan(String value) {
            addCriterion("mosuleSuperCode >", value, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeGreaterThanOrEqualTo(String value) {
            addCriterion("mosuleSuperCode >=", value, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeLessThan(String value) {
            addCriterion("mosuleSuperCode <", value, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeLessThanOrEqualTo(String value) {
            addCriterion("mosuleSuperCode <=", value, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeLike(String value) {
            addCriterion("mosuleSuperCode like", value, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeNotLike(String value) {
            addCriterion("mosuleSuperCode not like", value, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeIn(List<String> values) {
            addCriterion("mosuleSuperCode in", values, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeNotIn(List<String> values) {
            addCriterion("mosuleSuperCode not in", values, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeBetween(String value1, String value2) {
            addCriterion("mosuleSuperCode between", value1, value2, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andMosulesupercodeNotBetween(String value1, String value2) {
            addCriterion("mosuleSuperCode not between", value1, value2, "mosulesupercode");
            return (Criteria) this;
        }

        public Criteria andFindsIsNull() {
            addCriterion("finds is null");
            return (Criteria) this;
        }

        public Criteria andFindsIsNotNull() {
            addCriterion("finds is not null");
            return (Criteria) this;
        }

        public Criteria andFindsEqualTo(Boolean value) {
            addCriterion("finds =", value, "finds");
            return (Criteria) this;
        }

        public Criteria andFindsNotEqualTo(Boolean value) {
            addCriterion("finds <>", value, "finds");
            return (Criteria) this;
        }

        public Criteria andFindsGreaterThan(Boolean value) {
            addCriterion("finds >", value, "finds");
            return (Criteria) this;
        }

        public Criteria andFindsGreaterThanOrEqualTo(Boolean value) {
            addCriterion("finds >=", value, "finds");
            return (Criteria) this;
        }

        public Criteria andFindsLessThan(Boolean value) {
            addCriterion("finds <", value, "finds");
            return (Criteria) this;
        }

        public Criteria andFindsLessThanOrEqualTo(Boolean value) {
            addCriterion("finds <=", value, "finds");
            return (Criteria) this;
        }

        public Criteria andFindsIn(List<Boolean> values) {
            addCriterion("finds in", values, "finds");
            return (Criteria) this;
        }

        public Criteria andFindsNotIn(List<Boolean> values) {
            addCriterion("finds not in", values, "finds");
            return (Criteria) this;
        }

        public Criteria andFindsBetween(Boolean value1, Boolean value2) {
            addCriterion("finds between", value1, value2, "finds");
            return (Criteria) this;
        }

        public Criteria andFindsNotBetween(Boolean value1, Boolean value2) {
            addCriterion("finds not between", value1, value2, "finds");
            return (Criteria) this;
        }

        public Criteria andAddsIsNull() {
            addCriterion("adds is null");
            return (Criteria) this;
        }

        public Criteria andAddsIsNotNull() {
            addCriterion("adds is not null");
            return (Criteria) this;
        }

        public Criteria andAddsEqualTo(Boolean value) {
            addCriterion("adds =", value, "adds");
            return (Criteria) this;
        }

        public Criteria andAddsNotEqualTo(Boolean value) {
            addCriterion("adds <>", value, "adds");
            return (Criteria) this;
        }

        public Criteria andAddsGreaterThan(Boolean value) {
            addCriterion("adds >", value, "adds");
            return (Criteria) this;
        }

        public Criteria andAddsGreaterThanOrEqualTo(Boolean value) {
            addCriterion("adds >=", value, "adds");
            return (Criteria) this;
        }

        public Criteria andAddsLessThan(Boolean value) {
            addCriterion("adds <", value, "adds");
            return (Criteria) this;
        }

        public Criteria andAddsLessThanOrEqualTo(Boolean value) {
            addCriterion("adds <=", value, "adds");
            return (Criteria) this;
        }

        public Criteria andAddsIn(List<Boolean> values) {
            addCriterion("adds in", values, "adds");
            return (Criteria) this;
        }

        public Criteria andAddsNotIn(List<Boolean> values) {
            addCriterion("adds not in", values, "adds");
            return (Criteria) this;
        }

        public Criteria andAddsBetween(Boolean value1, Boolean value2) {
            addCriterion("adds between", value1, value2, "adds");
            return (Criteria) this;
        }

        public Criteria andAddsNotBetween(Boolean value1, Boolean value2) {
            addCriterion("adds not between", value1, value2, "adds");
            return (Criteria) this;
        }

        public Criteria andDeletesIsNull() {
            addCriterion("deletes is null");
            return (Criteria) this;
        }

        public Criteria andDeletesIsNotNull() {
            addCriterion("deletes is not null");
            return (Criteria) this;
        }

        public Criteria andDeletesEqualTo(Boolean value) {
            addCriterion("deletes =", value, "deletes");
            return (Criteria) this;
        }

        public Criteria andDeletesNotEqualTo(Boolean value) {
            addCriterion("deletes <>", value, "deletes");
            return (Criteria) this;
        }

        public Criteria andDeletesGreaterThan(Boolean value) {
            addCriterion("deletes >", value, "deletes");
            return (Criteria) this;
        }

        public Criteria andDeletesGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deletes >=", value, "deletes");
            return (Criteria) this;
        }

        public Criteria andDeletesLessThan(Boolean value) {
            addCriterion("deletes <", value, "deletes");
            return (Criteria) this;
        }

        public Criteria andDeletesLessThanOrEqualTo(Boolean value) {
            addCriterion("deletes <=", value, "deletes");
            return (Criteria) this;
        }

        public Criteria andDeletesIn(List<Boolean> values) {
            addCriterion("deletes in", values, "deletes");
            return (Criteria) this;
        }

        public Criteria andDeletesNotIn(List<Boolean> values) {
            addCriterion("deletes not in", values, "deletes");
            return (Criteria) this;
        }

        public Criteria andDeletesBetween(Boolean value1, Boolean value2) {
            addCriterion("deletes between", value1, value2, "deletes");
            return (Criteria) this;
        }

        public Criteria andDeletesNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deletes not between", value1, value2, "deletes");
            return (Criteria) this;
        }

        public Criteria andModifysIsNull() {
            addCriterion("modifys is null");
            return (Criteria) this;
        }

        public Criteria andModifysIsNotNull() {
            addCriterion("modifys is not null");
            return (Criteria) this;
        }

        public Criteria andModifysEqualTo(Boolean value) {
            addCriterion("modifys =", value, "modifys");
            return (Criteria) this;
        }

        public Criteria andModifysNotEqualTo(Boolean value) {
            addCriterion("modifys <>", value, "modifys");
            return (Criteria) this;
        }

        public Criteria andModifysGreaterThan(Boolean value) {
            addCriterion("modifys >", value, "modifys");
            return (Criteria) this;
        }

        public Criteria andModifysGreaterThanOrEqualTo(Boolean value) {
            addCriterion("modifys >=", value, "modifys");
            return (Criteria) this;
        }

        public Criteria andModifysLessThan(Boolean value) {
            addCriterion("modifys <", value, "modifys");
            return (Criteria) this;
        }

        public Criteria andModifysLessThanOrEqualTo(Boolean value) {
            addCriterion("modifys <=", value, "modifys");
            return (Criteria) this;
        }

        public Criteria andModifysIn(List<Boolean> values) {
            addCriterion("modifys in", values, "modifys");
            return (Criteria) this;
        }

        public Criteria andModifysNotIn(List<Boolean> values) {
            addCriterion("modifys not in", values, "modifys");
            return (Criteria) this;
        }

        public Criteria andModifysBetween(Boolean value1, Boolean value2) {
            addCriterion("modifys between", value1, value2, "modifys");
            return (Criteria) this;
        }

        public Criteria andModifysNotBetween(Boolean value1, Boolean value2) {
            addCriterion("modifys not between", value1, value2, "modifys");
            return (Criteria) this;
        }

        public Criteria andTimestampIsNull() {
            addCriterion("timestamp is null");
            return (Criteria) this;
        }

        public Criteria andTimestampIsNotNull() {
            addCriterion("timestamp is not null");
            return (Criteria) this;
        }

        public Criteria andTimestampEqualTo(Date value) {
            addCriterion("timestamp =", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampNotEqualTo(Date value) {
            addCriterion("timestamp <>", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampGreaterThan(Date value) {
            addCriterion("timestamp >", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampGreaterThanOrEqualTo(Date value) {
            addCriterion("timestamp >=", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampLessThan(Date value) {
            addCriterion("timestamp <", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampLessThanOrEqualTo(Date value) {
            addCriterion("timestamp <=", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampIn(List<Date> values) {
            addCriterion("timestamp in", values, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampNotIn(List<Date> values) {
            addCriterion("timestamp not in", values, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampBetween(Date value1, Date value2) {
            addCriterion("timestamp between", value1, value2, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampNotBetween(Date value1, Date value2) {
            addCriterion("timestamp not between", value1, value2, "timestamp");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table te_role_module
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table te_role_module
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}